1. ---------------------------Setting up the project-------------

npm install -g express-api-cli 
exp-api create awesome-project

2. ---------------------------Creating an API Endpoint-------------

 API endpoint is a specific URL in our application that responds to HTTP requests. In Express, you define endpoints using HTTP methods (GET, POST, PUT, DELETE, etc.) and associate them with specific URLs (routes).
 
 basic example of creating a simple endpoint that responds with a JSON message:
 
 ################
 const express = require('express');
const app = express();
const port = 3004

app.get('/', (req, res) => {
  res.json({message: 'Hello,world!'});
})
app.listen(port, ()=> {
  console.log(`Server is running`)
});
##################

app.get('/', ...) defines a GET endpoint at the root URL (/).
(req, res) => {...} is a callback function that handles the request (req) and sends a response (res).

3. using http GET request using  mock database

####################
app.get('/api/data',(req,res) => {
  const data = getDBQuery();
  res.json(data)
})
function getDBQuery() {
  return [
    {id: 1, name: 'pooja'},
    {id: 2, name: 'preethi'}
  ]
}
#####################

4. --------------------------Fetching an API---------------------

when we try to use fetch in a Node.js environment where it's not available by default because fetch is a browser API. To make HTTP requests in Node.js, you can use the axios library, which provides a similar API and works both in Node.js and browsers.

npm install axios

########################
const axios = require('axios');
const { error } = require('winston');

axios.get('http://localhost:3004/api/data')
    .then(response=> {
      console.log(response.data)
    })
    .catch(error => {
      console.error('Error fetching data: ', error)
    })
#########################
axios.get() sends a GET request to http://localhost:3000/api/data.
The response is handled in .then() where response.data contains the JSON data returned by the server.
Errors are caught in .catch() for error handling.

